[{"C:\\Users\\Owen\\source\\repos\\BLR\\app\\http\\web\\app\\src\\index.js":"1","C:\\Users\\Owen\\source\\repos\\BLR\\app\\http\\web\\app\\src\\App.js":"2","C:\\Users\\Owen\\source\\repos\\BLR\\app\\http\\web\\app\\src\\reportWebVitals.js":"3","C:\\Users\\Owen\\source\\repos\\BLR\\app\\http\\web\\app\\src\\Main\\index.js":"4","C:\\Users\\Owen\\source\\repos\\BLR\\app\\http\\web\\app\\src\\Home\\index.js":"5","C:\\Users\\Owen\\source\\repos\\BLR\\app\\http\\web\\app\\src\\apiClient.js":"6","C:\\Users\\Owen\\source\\repos\\BLR\\app\\http\\web\\app\\src\\Book\\index.js":"7","C:\\Users\\Owen\\source\\repos\\BLR\\app\\http\\web\\app\\src\\contextLib.js":"8","C:\\Users\\Owen\\source\\repos\\BLR\\app\\http\\web\\app\\src\\Login.js":"9","C:\\Users\\Owen\\source\\repos\\BLR\\app\\http\\web\\app\\src\\Author\\index.js":"10","C:\\Users\\Owen\\source\\repos\\BLR\\app\\http\\web\\app\\src\\Constants.js":"11"},{"size":172,"mtime":1607784617657,"results":"12","hashOfConfig":"13"},{"size":1140,"mtime":1607872649227,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"16"},{"size":430,"mtime":1607538389676,"results":"17","hashOfConfig":"13"},{"size":5481,"mtime":1607957556832,"results":"18","hashOfConfig":"13"},{"size":1123,"mtime":1607881986673,"results":"19","hashOfConfig":"13"},{"size":1312,"mtime":1607956341960,"results":"20","hashOfConfig":"13"},{"size":174,"mtime":1607866800015,"results":"21","hashOfConfig":"13"},{"size":1929,"mtime":1607872551659,"results":"22","hashOfConfig":"13"},{"size":1245,"mtime":1607956687955,"results":"23","hashOfConfig":"13"},{"size":283,"mtime":1607958789265,"results":"24","hashOfConfig":"13"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"1xpjj58",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cew1hp",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"27"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Owen\\source\\repos\\BLR\\app\\http\\web\\app\\src\\index.js",[],["49","50"],"C:\\Users\\Owen\\source\\repos\\BLR\\app\\http\\web\\app\\src\\App.js",[],"C:\\Users\\Owen\\source\\repos\\BLR\\app\\http\\web\\app\\src\\reportWebVitals.js",[],"C:\\Users\\Owen\\source\\repos\\BLR\\app\\http\\web\\app\\src\\Main\\index.js",[],"C:\\Users\\Owen\\source\\repos\\BLR\\app\\http\\web\\app\\src\\Home\\index.js",["51"],"import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\n\r\nimport Book from \"../Book\"\r\nimport Author from \"../Author\"\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginTop: 30\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n});\r\n\r\n// a little function to help us with reordering the result\r\nconst reorder = (list, startIndex, endIndex) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n\r\nconst grid = 8;\r\n\r\nconst getItemStyle = (isDragging, draggableStyle) => ({\r\n  // some basic styles to make the items look a bit nicer\r\n  userSelect: \"none\",\r\n  padding: grid * 2,\r\n  margin: `0 0 ${grid}px 0`,\r\n\r\n  // change background colour if dragging\r\n  background: isDragging ? \"lightgreen\" : \"grey\",\r\n\r\n  // styles we need to apply on draggables\r\n  ...draggableStyle\r\n});\r\n\r\nconst getListStyle = isDraggingOver => ({\r\n  background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\r\n  padding: grid,\r\n  width: 250\r\n});\r\n\r\nclass Home extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: 0,\r\n      books: [],\r\n      authors: [],\r\n      publishers: [],\r\n      editions: []\r\n    };\r\n    this.onDragEnd = this.onDragEnd.bind(this);\r\n  }\r\n\r\n  onDragEnd(result) {\r\n    // dropped outside the list\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n\r\n    const books = reorder(\r\n      this.state.books,\r\n      result.source.index,\r\n      result.destination.index\r\n    );\r\n\r\n    this.setState({\r\n      books\r\n    });\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.loadBooks();\r\n  }\r\n\r\n  loadBooks() {\r\n    global.apiClient.getBooks().then((data) =>\r\n      this.setState({...this.state, books: data[\"books\"]})\r\n    );\r\n  }\r\n\r\n  loadAuthors() {\r\n    global.apiClient.getAuthors().then((data) =>\r\n      this.setState({...this.state, authors: data[\"authors\"]})\r\n    );\r\n  }\r\n\r\n  loadPublishers() {\r\n    global.apiClient.getPublishers().then((data) =>\r\n      this.setState({...this.state, publishers: data[\"publishers\"]})\r\n    );\r\n  }\r\n\r\n  handleTabChange = (event, value) => {\r\n    this.setState({ value });\r\n    switch(value) {\r\n      case 0:\r\n        this.loadBooks();\r\n        break;\r\n      case 1:\r\n        this.loadAuthors();\r\n        break;\r\n      case 2:\r\n        this.loadPublishers();\r\n        break;\r\n      default:\r\n    }\r\n  };\r\n\r\n  handleTabChangeIndex = index => {\r\n    this.setState({ value: index });\r\n  };\r\n\r\n  resetBooks = books => this.setState({ ...this.state, books })\r\n\r\n  onDelete = (book) => {\r\n      global.apiClient.deleteBook(book);\r\n      this.setState({\r\n        ...this.state,\r\n        books: this.state.books.filter( b => b.id !== book.id )\r\n      })\r\n  }\r\n\r\n  renderBooks = (books) => {\r\n    if (!books) { return [] }\r\n    return (\r\n      <DragDropContext onDragEnd={this.onDragEnd}>\r\n      <Droppable droppableId=\"droppable\">\r\n        {(provided, snapshot) => (\r\n          <div\r\n            {...provided.droppableProps}\r\n            ref={provided.innerRef}\r\n            style={getListStyle(snapshot.isDraggingOver)}\r\n          >\r\n            {this.state.books.map((item, index) => (\r\n              <Draggable key={item.id.toString()} draggableId={item.id.toString()} index={index}>\r\n                {(provided, snapshot) => (\r\n                  <div\r\n                    ref={provided.innerRef}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    style={getItemStyle(\r\n                      snapshot.isDragging,\r\n                      provided.draggableProps.style\r\n                    )}\r\n                  >\r\n                    <Book onDelete={this.onDelete} book={item} />\r\n                  </div>\r\n                )}\r\n              </Draggable>\r\n            ))}\r\n            {provided.placeholder}\r\n          </div>\r\n        )}\r\n      </Droppable>\r\n    </DragDropContext>\r\n    );\r\n  }\r\n  \r\n\r\n  resetAuthors = authors => this.setState({ ...this.state, authors })\r\n  \r\n  renderAuthors = (authors) => {\r\n    if (!authors) { return [] }\r\n    return authors.map((author) => {\r\n      return (\r\n        <Grid item xs={12} md={3} key={author.id}>\r\n          <Author onAuthor={this.onAuthor} author={author} />\r\n        </Grid>\r\n      );\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.root}>\r\n        <Tabs\r\n          value={this.state.value}\r\n          onChange={this.handleTabChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"fullWidth\"\r\n        >\r\n          <Tab label=\"Books\" />\r\n          <Tab label=\"Authors\" />\r\n          <Tab label=\"Publishers\" />\r\n        </Tabs>\r\n      \r\n          <Grid container style={{padding: '20px 0'}}>\r\n            { this.state.value === 0 ? this.renderBooks(this.state.books) : null }\r\n            { this.state.value === 1 ? this.renderAuthors(this.state.authors) : null }\r\n            { this.state.value === 2 ? this.renderBooks(this.state.publishers) : null }\r\n          </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Home);","C:\\Users\\Owen\\source\\repos\\BLR\\app\\http\\web\\app\\src\\apiClient.js",[],"C:\\Users\\Owen\\source\\repos\\BLR\\app\\http\\web\\app\\src\\Book\\index.js",[],"C:\\Users\\Owen\\source\\repos\\BLR\\app\\http\\web\\app\\src\\contextLib.js",[],"C:\\Users\\Owen\\source\\repos\\BLR\\app\\http\\web\\app\\src\\Login.js",[],"C:\\Users\\Owen\\source\\repos\\BLR\\app\\http\\web\\app\\src\\Author\\index.js",[],"C:\\Users\\Owen\\source\\repos\\BLR\\app\\http\\web\\app\\src\\Constants.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":3,"column":8,"nodeType":"58","messageId":"59","endLine":3,"endColumn":22},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'SwipeableViews' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]